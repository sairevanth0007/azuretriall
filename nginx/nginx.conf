server {
    listen 80;
    server_name _; # Or your FQDN later

    # Serve frontend (React app from ./client)
    location / {
        proxy_pass http://localhost:3000; # Frontend container listens on port 3000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade"; # Important for WebSocket if React uses it
    }

    # Proxy API requests to backend (Node.js app from ./server)
    location /api/ { # Assuming your backend routes start with /api/
        proxy_pass http://localhost:5000; # Backend container listens on port 5000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # If your backend API routes don't expect the /api/ prefix, uncomment the rewrite:
        # rewrite ^/api/(.*)$ /$1 break;
    }

    # Optional: Add error pages, logs, etc.
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html; # Or wherever your Nginx Docker image stores static error pages
    }
}