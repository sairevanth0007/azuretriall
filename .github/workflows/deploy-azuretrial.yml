name: Deploy Azuretrall App with Nginx to Azure

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to main branch

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout Code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # 4. Build and Push Frontend Image
      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-frontend:latest ./client
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-frontend:latest

      # 5. Build and Push Backend Image
      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-backend:latest ./server
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-backend:latest

      # 6. Build and Push Nginx Image
      - name: Build and Push Nginx Image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-nginx:latest ./nginx
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-nginx:latest

      # 7. Azure Login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 8. Deploy Backend Container
      - name: Deploy Backend to ACI
        run: |
          az container create \
            --resource-group my-resource-group \
            --name azuretriall-backend \
            --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-backend:latest \
            --ports 5000 \
            --environment-variables ATLAS_URI=${{ secrets.ATLAS_URI }} \
            --registry-username ${{ secrets.REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
            --restart-policy OnFailure

      # 9. Deploy Frontend Container
      - name: Deploy Frontend to ACI
        run: |
          az container create \
            --resource-group my-resource-group \
            --name azuretriall-frontend \
            --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-frontend:latest \
            --ports 3000 \
            --registry-username ${{ secrets.REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
            --restart-policy OnFailure

      # 10. Deploy Nginx Reverse Proxy Container
      - name: Deploy Nginx to ACI
        run: |
          az container create \
            --resource-group my-resource-group \
            --name azuretriall-nginx \
            --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/azuretriall-nginx:latest \
            --ports 80 \
            --dns-name-label azuretriall-${{ github.run_id }} \
            --registry-username ${{ secrets.REGISTRY_USERNAME }} \
            --registry-password ${{ secrets.REGISTRY_PASSWORD }} \
            --depends-on azuretriall-frontend azuretriall-backend \
            --restart-policy OnFailure